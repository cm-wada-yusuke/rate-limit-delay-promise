"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const delay = require("delay");
class RateLimitPromise {
    /**
     * @param values
     * @param asyncExecutor
     * @param delayMillis
     */
    static all(values, asyncExecutor, delayMillis) {
        const delayedValues = RateLimitPromise.delayedValuesGenerator(values, delayMillis);
        return RateLimitPromise.delayedValuesExecution(delayedValues, asyncExecutor);
    }
    static delayedValuesExecution(delayedValues, asyncExecutor) {
        return delayedValues.reduce((prev, curr) => {
            return prev.then(async (array) => {
                const value = await curr();
                const result = await asyncExecutor(value);
                return array.concat(result);
            });
        }, Promise.resolve([]));
    }
    static delayedValuesGenerator(values, delay) {
        return values.map(v => RateLimitPromise.delayedValue(v, delay));
    }
    static delayedValue(value, interval) {
        return async () => {
            await delay(interval);
            return value;
        };
    }
}
exports.RateLimitPromise = RateLimitPromise;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUErQjtBQUUvQixNQUFhLGdCQUFnQjtJQUV6Qjs7OztPQUlHO0lBQ0gsTUFBTSxDQUFDLEdBQUcsQ0FBTyxNQUFXLEVBQUUsYUFBeUMsRUFBRSxXQUFtQjtRQUN4RixNQUFNLGFBQWEsR0FBRyxnQkFBZ0IsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLEVBQUUsV0FBVyxDQUFDLENBQUM7UUFDbkYsT0FBTyxnQkFBZ0IsQ0FBQyxzQkFBc0IsQ0FBQyxhQUFhLEVBQUUsYUFBYSxDQUFDLENBQUM7SUFDakYsQ0FBQztJQUVPLE1BQU0sQ0FBQyxzQkFBc0IsQ0FBTyxhQUFtQyxFQUFFLGFBQXlDO1FBQ3RILE9BQU8sYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQWtCLEVBQUUsSUFBd0IsRUFBRSxFQUFFO1lBQ3pFLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUMsS0FBSyxFQUFDLEVBQUU7Z0JBQzNCLE1BQU0sS0FBSyxHQUFNLE1BQU0sSUFBSSxFQUFFLENBQUM7Z0JBQzlCLE1BQU0sTUFBTSxHQUFHLE1BQU0sYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUMxQyxPQUFPLEtBQUssQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDaEMsQ0FBQyxDQUFDLENBQUE7UUFDTixDQUFDLEVBQUUsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzVCLENBQUM7SUFFTyxNQUFNLENBQUMsc0JBQXNCLENBQUksTUFBVyxFQUFFLEtBQWE7UUFDL0QsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsZ0JBQWdCLENBQUMsWUFBWSxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQ3BFLENBQUM7SUFFTyxNQUFNLENBQUMsWUFBWSxDQUFJLEtBQVEsRUFBRSxRQUFnQjtRQUNyRCxPQUFPLEtBQUssSUFBSSxFQUFFO1lBQ2QsTUFBTSxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDdEIsT0FBTyxLQUFLLENBQUM7UUFDakIsQ0FBQyxDQUFBO0lBQ0wsQ0FBQztDQUVKO0FBakNELDRDQWlDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGRlbGF5IGZyb20gJ2RlbGF5JztcblxuZXhwb3J0IGNsYXNzIFJhdGVMaW1pdFByb21pc2Uge1xuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHZhbHVlc1xuICAgICAqIEBwYXJhbSBhc3luY0V4ZWN1dG9yXG4gICAgICogQHBhcmFtIGRlbGF5TWlsbGlzXG4gICAgICovXG4gICAgc3RhdGljIGFsbDxULCBVPih2YWx1ZXM6IFRbXSwgYXN5bmNFeGVjdXRvcjogKCh2YWx1ZTogVCkgPT4gUHJvbWlzZTxVPiksIGRlbGF5TWlsbGlzOiBudW1iZXIpOiBQcm9taXNlPFVbXT4ge1xuICAgICAgICBjb25zdCBkZWxheWVkVmFsdWVzID0gUmF0ZUxpbWl0UHJvbWlzZS5kZWxheWVkVmFsdWVzR2VuZXJhdG9yKHZhbHVlcywgZGVsYXlNaWxsaXMpO1xuICAgICAgICByZXR1cm4gUmF0ZUxpbWl0UHJvbWlzZS5kZWxheWVkVmFsdWVzRXhlY3V0aW9uKGRlbGF5ZWRWYWx1ZXMsIGFzeW5jRXhlY3V0b3IpO1xuICAgIH1cblxuICAgIHByaXZhdGUgc3RhdGljIGRlbGF5ZWRWYWx1ZXNFeGVjdXRpb248VCwgVT4oZGVsYXllZFZhbHVlczogKCgpID0+IFByb21pc2U8VD4pW10sIGFzeW5jRXhlY3V0b3I6ICgodmFsdWU6IFQpID0+IFByb21pc2U8VT4pKTogUHJvbWlzZTxVW10+IHtcbiAgICAgICAgcmV0dXJuIGRlbGF5ZWRWYWx1ZXMucmVkdWNlKChwcmV2OiBQcm9taXNlPFVbXT4sIGN1cnI6ICgoKSA9PiBQcm9taXNlPFQ+KSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHByZXYudGhlbihhc3luYyBhcnJheSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWU6IFQgPSBhd2FpdCBjdXJyKCk7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgYXN5bmNFeGVjdXRvcih2YWx1ZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFycmF5LmNvbmNhdChyZXN1bHQpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgfSwgUHJvbWlzZS5yZXNvbHZlKFtdKSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzdGF0aWMgZGVsYXllZFZhbHVlc0dlbmVyYXRvcjxUPih2YWx1ZXM6IFRbXSwgZGVsYXk6IG51bWJlcik6ICgoKSA9PiBQcm9taXNlPFQ+KVtdIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlcy5tYXAodiA9PiBSYXRlTGltaXRQcm9taXNlLmRlbGF5ZWRWYWx1ZSh2LCBkZWxheSkpO1xuICAgIH1cblxuICAgIHByaXZhdGUgc3RhdGljIGRlbGF5ZWRWYWx1ZTxUPih2YWx1ZTogVCwgaW50ZXJ2YWw6IG51bWJlcik6ICgpID0+IFByb21pc2U8VD4ge1xuICAgICAgICByZXR1cm4gYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgYXdhaXQgZGVsYXkoaW50ZXJ2YWwpO1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9XG4gICAgfVxuXG59XG5cblxuIl19